name: Test on All Platforms

# ======================================================================================================================

on:
  # Run when the main branch is updated.
  push:
    branches: [ 'main' ]

  # Run when pull requests advance in state or progress.
  pull_request:
    types: [ 'opened', 'reopened', 'ready_for_review', 'synchronize' ]

  # Run when manually triggered via GitHub's UI.
  workflow_dispatch: # No configuration needed.

# ======================================================================================================================

# If tests are already being run for a previous commit on this branch, cancel the old ones and test the newer code.
concurrency:
  group: ${{ github.workflow }} (${{ github.ref || github.sha }})
  cancel-in-progress: true

# ======================================================================================================================

jobs:
  test-all:
    name: Test All Targets with Gradle

    # Run our unit tests on several platforms, each testing different targets of our Kotlin builds:
    # - macOS for building & testing our native macOS, iOS, watchOS, and tvOS targets
    # - Ubuntu for building & testing our JVM, JavaScript, WebAssembly, and native Linux targets
    # - Windows for building & testing our native Windows targets
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'macos-latest'
          - 'ubuntu-latest'
          - 'windows-latest'

    # For the runner that's on Linux, tell it to also test our JVM, JavaScript, and WebAssembly targets, in addition to
    # its normal Linux-specific native targets.
    env:
      MEW_TARGET: ${{ startsWith(matrix.os, 'ubuntu') && 'all' || 'native' }}

    steps:
      - uses: actions/checkout@v3

        # Use Java 8 for building & testing, and cache Gradle files so subsequent builds are faster.
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'gradle'

        # Verify that our "./gradle/wrapper/gradle-wrapper.jar" has not been tampered with.
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

        # Build, run tests, ensure ABI dumps are up-to-date (from "binary-compatibility-validator" Gradle plugin).
      - name: Verify, Compile, Test
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: check