# Building on multiple platforms at once takes up a bit of memory, so we'll set a memory ceiling of 2 GB.
org.gradle.jvmargs = -Xmx2G

# Configure the base style for Kotlin files. For IDEs that understand our ".editorconfig" file, this doesn't matter
# because that will take precedence.
kotlin.code.style = official

# Hide warnings about Kotlin Multiplatform's stability.
kotlin.mpp.stability.nowarn = true

# Hide warnings about Kotlin's WebAssembly stability.
kotlin.wasm.stability.nowarn = true

# Hide warnings about registering native targets that can't be built on the current OS. Not registering them would omit
# certain metadata needed for users to be able to depend on the library without asking for every platform they need.
kotlin.native.ignoreDisabledTargets = true

# Don't generate executable JS files because this is a library, not an application.
kotlin.js.generate.executable.default = false

### @formatter:off

# Which Kotlin targets should be tested and/or compiled during builds.
# This must be one of the following:
# - "common": Targets that don't belong to a specific family of operating systems. For example, Java and JavaScript.
# - "native": Targets that belong specifically to the family of operating system that's performing the build.
# - "all":    All available targets; behaves as if "common" and "native" were both selected.
mew-tea-f8.compilation.mode = all

# The implicit package that source files & inner packages are inside.
# For example, if this is "me.nullicorn.mewteaf8", then a file at "src/commomMain/kotlin/Source.kt" will use that
# package even though it would normally need to be in "src/commonMain/kotlin/me/nullicorn/mewteaf8" to have it.
mew-tea-f8.source.package_prefix = me.nullicorn.mewteaf8

# Replacements for the default names of platforms in documentation generated by Dokka.
# To replace a platform's name, create a property "mew-tea-f8.documentation.platform.{default_name}.name" and replace
# "{default_name}" with the name of the corresponding source-set, without the "Main" or "Test" suffix.
mew-tea-f8.documentation.platform.jvm.name    = Java / Kotlin JVM
mew-tea-f8.documentation.platform.nonJvm.name = Kotlin JS / Kotlin Native
mew-tea-f8.documentation.platform.common.name = All Platforms

# The GitHub tree that the code in the working directory is from and/or will be pushed to.
# This can be the name of a branch or tag, a commit hash, or anything else that GitHub accepts in the "<tree>" part of
# this kind of URL: "https://github.com/USER/REPO/tree/<tree>"
mew-tea-f8.github.tree                        = main
# The GitHub account name of the repository's owner.
mew-tea-f8.github.owner                       = TheNullicorn
# The name of the GitHub repository that this local clone originates from.
mew-tea-f8.github.repository                  = mew-tea-f8

# The GitHub access token with access to the repository's metadata & collaborators; this is only used for publishing.
# Given its sensitivity, configure it via environment variable or `$GRADLE_HOME/gradle.properties`, not here.
#mew-tea-f8.github.token = ...

# Whether the option to publish (via the tasks of the "maven-publish" plugin) should be available during builds.
mew-tea-f8.publishing.enabled = false
# The URL of the Maven repository that snapshot builds of the library are published to.
mew-tea-f8.publishing.repository.snapshot.url = https://s01.oss.sonatype.org/content/repositories/snapshots/
# The URL of the Maven repository that staging builds of the library are published to prior to being released.
mew-tea-f8.publishing.repository.staging.url  = https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/

# The sername used to publish to the snapshot & staging repositories. Given its sensitivity, configure it via
# environment variable or `$GRADLE_HOME/gradle.properties`, not here.
#mew-tea-f8.publishing.username = ...

# The password used to publish to the snapshot & staging repositories. Given its sensitivity, configure it via
# environment variable or `$GRADLE_HOME/gradle.properties`, not here.
#mew-tea-f8.publishing.password = ...

# The password for the GPG secret key used to sign publications. Given its sensitivity, configure it via environment
# variable or `$GRADLE_HOME/gradle.properties`, not here.
#signing.password = ...

# The path to the GPG keyring file containing the secret key used for signing. Though this path isn't sensitive itself,
# it should be configured in the same place as the key's password
#signing.secretKeyRingFile = ...

# The ID of GPG secret key used to sign publications. This is only needed when signing using a subkey. Though not
# sensitive, it should be configured in the same place as the key itself for the sake of organization (see above).
#signing.keyId = ...

### @formatter:on